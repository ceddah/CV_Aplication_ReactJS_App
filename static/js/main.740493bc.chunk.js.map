{"version":3,"sources":["components/InputSection.js","components/PreviewSection.js","components/Sidebar.js","components/templateData.js","components/App.js","index.js"],"names":["InputSection","data","setData","useState","skillsInput","setSkillsInput","dummyRef","useRef","handleChangeAllInputs","objKey","e","id","target","name","value","newData","map","item","removeInputField","filter","getRandomID","Date","getTime","className","htmlFor","src","personal","img","alt","type","onChange","newImage","URL","createObjectURL","files","autoComplete","placeholder","bio","cols","rows","fontSize","location","phone","email","linkedin","github","experience","index","position","company","description","startDate","endDate","onClick","val1","val2","val3","addAnotherFieldForExp","education","school","degree","addAnotherFieldForEdu","onSubmit","preventDefault","newSkill","skill","skillID","skills","current","scrollIntoView","behavior","newSkills","handleSkillsRemove","ref","protomatch","PreviewSection","idx","href","replace","length","skillsID","Sidebar","isPreview","turnPreview","turnTemplateData","Button","variant","color","window","print","template","App","preview","setPreview","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.740493bc.chunk.js","sourcesContent":["import React, {useState,useRef} from 'react'\nimport RoomIcon from '@material-ui/icons/Room';\nimport PhoneIcon from '@material-ui/icons/Phone';\nimport EmailIcon from '@material-ui/icons/Email';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport WorkIcon from '@material-ui/icons/Work';\nimport BuildIcon from '@material-ui/icons/Build';\nimport SchoolIcon from '@material-ui/icons/School';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport CloseIcon from '@material-ui/icons/Close';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nconst InputSection = ({data,setData}) => {\n    const [skillsInput,setSkillsInput] = useState('');\n    const dummyRef = useRef();\n\n    const handleSkillsSubmit = (e) => {\n        e.preventDefault();\n        const newSkill = {\n            skill: skillsInput,\n            skillID: getRandomID()\n        };\n        if(skillsInput !== '') {\n            setData({...data, skills: [...data.skills, newSkill]});\n            setSkillsInput('');\n            dummyRef.current.scrollIntoView({ behavior: \"smooth\" });\n        }\n    }\n\n    const handleSkillsRemove = (id) => {\n        const newSkills = data.skills.filter(item => item.skillID !== id);\n        setData({...data, skills: newSkills});\n    }\n\n    const handleChangeAllInputs = (objKey, e, id) => {\n        const {name,value} = e.target\n        const newData = data[objKey].map(item => {\n            if(item.id === id) {\n                return {...item, [name]: value}\n            }\n            return item;\n        })\n        setData({...data, [objKey]: newData});\n    }\n\n    const removeInputField = (objKey,id) => {\n        const newData = data[objKey].filter(item => item.id !== id);\n        setData({...data, [objKey]: newData});\n    }\n\n    const handleFileInputChange = (e) => {\n        const newImage = URL.createObjectURL(e.target.files[0]);\n        const newData = data.personal.map(item => {\n            if(item.id === 777) {\n                return {...item, [e.target.name]: newImage}\n            }\n            return item;\n        })\n        setData({...data, personal: newData});\n    }\n\n    const getRandomID = () => new Date().getTime();\n\n    const addAnotherFieldForExp = (val1,val2,val3,id) => {\n        setData({...data, experience: [...data.experience, { [val1]: '', [val2]: '', [val3]: '',startDate: '', endDate: '', id }]});\n    }\n\n    const addAnotherFieldForEdu = (val1,val2,id) => {\n        setData({...data, education: [...data.education, { [val1]: '', [val2]: '',startDate: '', endDate: '', id }]});\n    }\n\n    const renderExperienceInputs = () => {\n        return data.experience.map((item,index) => {\n            return (\n                <div key={index} className=\"form-control-field\">\n                    <div className=\"controlled-inputs\">\n                        <input value={data.experience[index].position} onChange={(e) => handleChangeAllInputs('experience', e, item.id)} type=\"text\" name=\"position\" placeholder=\"Your position here\" />\n                        <input value={data.experience[index].company} onChange={(e) => handleChangeAllInputs('experience', e, item.id)} type=\"text\" name=\"company\" placeholder=\"Your company here\" />\n                        <textarea value={data.experience[index].description} onChange={(e) => handleChangeAllInputs('experience', e, item.id)} name=\"description\" cols=\"30\" rows=\"5\" placeholder=\"Job description here (optional)\"></textarea>\n                    </div>\n                    <div className=\"dates\">\n                        <div className=\"dates-control\">\n                            <p>Start Date:</p>\n                            <input value={data.experience[index].startDate} onChange={(e) => handleChangeAllInputs('experience', e, item.id)} type=\"date\" name=\"startDate\" />\n                        </div>\n                        <div className=\"dates-control\">\n                            <p>End Date:</p>\n                            <input value={data.experience[index].endDate} onChange={(e) => handleChangeAllInputs('experience', e, item.id)} type=\"date\" name=\"endDate\" />\n                        </div>\n                        <button onClick={() => removeInputField('experience', item.id)} className=\"remove-input\" ><DeleteIcon /> Delete</button>\n                    </div>\n                </div>\n            )\n        })\n    }\n\n    const renderEducationInputs = () => {\n        return data.education.map((item,index) => {\n            return (\n                <div key={index + 5} className=\"form-control-field\">\n                    <div className=\"controlled-inputs\">\n                        <input value={data.education[index].school} onChange={(e) => handleChangeAllInputs('education', e, item.id)} type=\"text\" name=\"school\" placeholder=\"Your school here\" />\n                        <input value={data.education[index].degree} onChange={(e) => handleChangeAllInputs('education', e, item.id)} type=\"text\" name=\"degree\" placeholder=\"Your degree here\" />\n                    </div>\n                    <div className=\"dates\">\n                        <div className=\"dates-control\">\n                            <p>Start Date:</p>\n                            <input value={data.education[index].startDate} onChange={(e) => handleChangeAllInputs('education', e, item.id)} type=\"date\" name=\"startDate\" />\n                        </div>\n                        <div className=\"dates-control\">\n                            <p>End Date:</p>\n                            <input value={data.education[index].endDate} onChange={(e) => handleChangeAllInputs('education', e, item.id)} type=\"date\" name=\"endDate\" />\n                        </div>\n                        <button onClick={() => removeInputField('education', item.id)} className=\"remove-input\" ><DeleteIcon /> Delete</button>\n                    </div>\n                </div>\n            )\n        })\n    }\n\n    return (\n        <main className=\"section__inputs\">\n            <section className=\"personal-info\">\n                <div className=\"your-image\">\n                    <label htmlFor=\"imageInput\">\n                        <img src={data.personal[0].img} alt=\"personalPhoto\" />\n                    </label>\n                    <input type=\"file\" onChange={handleFileInputChange} name=\"img\" id=\"imageInput\" />\n                </div>\n                <div className=\"personal-info__inputs\">\n                    <input value={data.personal[0].name} onChange={(e) => handleChangeAllInputs('personal', e, 777)} type=\"text\" name=\"name\"  autoComplete=\"off\" placeholder=\"Input your name here\"/>\n                    <textarea value={data.personal[0].bio} onChange={(e) => handleChangeAllInputs('personal', e, 777)} name=\"bio\" cols=\"30\" rows=\"5\" placeholder=\"Small bio about yourself here\"></textarea>\n                </div>\n                <div className=\"contact-info\">\n                    <div className=\"contact-form-control\">\n                        <RoomIcon fontSize=\"small\" />\n                        <input value={data.personal[0].location} onChange={(e) => handleChangeAllInputs('personal', e, 777)} type=\"text\" name=\"location\" placeholder=\"Your location here\" />\n                    </div>\n                    <div className=\"contact-form-control\">\n                        <PhoneIcon fontSize=\"small\" />\n                        <input value={data.personal[0].phone} onChange={(e) => handleChangeAllInputs('personal', e, 777)} type=\"tel\" name=\"phone\" placeholder=\"Your phone here\" />\n                    </div>\n                    <div className=\"contact-form-control\">\n                        <EmailIcon fontSize=\"small\" />\n                        <input value={data.personal[0].email} onChange={(e) => handleChangeAllInputs('personal', e, 777)} type=\"email\" name=\"email\" placeholder=\"Your email here\" />\n                    </div>\n                    <div className=\"contact-form-control\">\n                        <LinkedInIcon fontSize=\"small\" />\n                        <input value={data.personal[0].linkedin} onChange={(e) => handleChangeAllInputs('personal', e, 777)} type=\"url\" name=\"linkedin\" placeholder=\"Your Linkedin here\" />\n                    </div>\n                    <div className=\"contact-form-control\">\n                        <GitHubIcon fontSize=\"small\" />\n                        <input value={data.personal[0].github} onChange={(e) => handleChangeAllInputs('personal', e, 777)} type=\"url\" name=\"github\" placeholder=\"Your Github here\" />\n                    </div>\n                </div>\n            </section>\n\n            <section className=\"sect experience\">\n                <h1 className=\"sect__header\"><WorkIcon className=\"header-icon\" /> Experience</h1>\n                <div className=\"sect__inputs\">\n                    {renderExperienceInputs()}\n                </div>\n                <button onClick={() => addAnotherFieldForExp('position','company', 'description', getRandomID())} className=\"add-more\"><AddCircleIcon className=\"add-more__btn\" />Add More</button>\n            </section>\n            <section className=\"sect education\">\n            <h1 className=\"sect__header\"><SchoolIcon className=\"header-icon\"/> Education</h1>\n                <div className=\"sect__inputs\">\n                    {renderEducationInputs()}\n                </div>\n                <button onClick={() => addAnotherFieldForEdu('school', 'degree', getRandomID())} className=\"add-more\"><AddCircleIcon className=\"add-more__btn\" />Add More</button>\n            </section>\n            <section className=\"sect skills\">\n                <h1 className=\"sect__header\"><BuildIcon className=\"header-icon\" /> Skills</h1>\n                <div className=\"skills_input\">\n                    <form onSubmit={handleSkillsSubmit}>\n                        <input value={skillsInput} onChange={(e) => setSkillsInput(e.target.value)} type=\"text\" name=\"skills\"  placeholder=\"Your skills here\" />\n                        <button className=\"add-more\"><AddCircleIcon className=\"add-more__btn\" />Add More</button>\n                    </form>\n                    <ul className=\"skills_list\">\n                       {data.skills.map(item => {\n                           return (\n                            <li key={item.skillID}>\n                                <span>{item.skill}</span>\n                                <CloseIcon className=\"close-icon\" onClick={() => handleSkillsRemove(item.skillID)} />\n                            </li>\n                           )\n                       })}\n                    </ul>\n                </div>\n            </section>\n            <div ref={dummyRef} className=\"dummyDiv\"></div>\n        </main>\n    )\n}\n\nexport default InputSection","import React from 'react'\nimport RoomIcon from '@material-ui/icons/Room';\nimport PhoneIcon from '@material-ui/icons/Phone';\nimport EmailIcon from '@material-ui/icons/Email';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport WorkIcon from '@material-ui/icons/Work';\nimport BuildIcon from '@material-ui/icons/Build';\nimport SchoolIcon from '@material-ui/icons/School';\n\nvar protomatch = /^(https?|ftp):\\/\\//;\n\nconst PreviewSection = ({data}) => {\n    const previewPersonalInfo = () => {\n        return data.personal.map((item,idx) => {\n            return (\n                <div key={idx + 50} className=\"preview__personal\">\n                    <div className=\"preview-image\">\n                        <img src={item.img} alt=\"portfolioPhoto\" />\n                    </div>\n                    <div className=\"preview-name-desc\">\n                        <h1>{item.name}</h1>\n                        <p>{item.bio}</p>\n                    </div>\n                    <div className=\"preview-social\">\n                        {item.location !== '' && <p><RoomIcon className=\"social-preview\" /> {item.location}</p>}\n                        {item.phone !== '' && <a href={`tel:+${item.phone}`}><PhoneIcon className=\"social-preview\" /> {item.phone}</a>}\n                        {item.email !== '' && <a href={`mailto:${item.email}`}><EmailIcon className=\"social-preview\" /> {item.email}</a>}\n                        {item.linkedin !== '' && <a href={item.linkedin}><LinkedInIcon className=\"social-preview\" /> {item.linkedin.replace(protomatch, '')}</a>}\n                        {item.github !== '' && <a href={item.github}><GitHubIcon className=\"social-preview\" /> {item.github.replace(protomatch, '')}</a>}\n                    </div>\n                </div>\n            )\n        })\n    }\n\n    const previewWorkSection = () => {\n        if(data.experience.length === 0) return null;\n        return (\n            <div className=\"preview-experience\">\n                <h1><WorkIcon className=\"preview-header-icon\" /> Experience</h1>\n                {data.experience.map((item,idx) => {\n                    return (\n                        <div key={idx + 10} className=\"preview-experience-section\">\n                            <div className=\"exp-title\">\n                                <h3 className=\"preview-company\">{item.company}</h3>\n                                <h3 className=\"preview-position\">{item.position}</h3>\n                            </div>\n                            <div className=\"worked-for\">\n                                {`${item.startDate} - ${item.startDate && !item.endDate ? 'Still Working' : item.endDate}`}\n                            </div>\n                            <p className=\"exp-description\">{item.description}</p>\n                        </div>\n                    )\n                })}\n            </div>\n        )\n    }\n\n    const previewEducationSection = () => {\n        if(data.education.length === 0) return null;\n        return (\n            <div className=\"preview-education\">\n                <h1><SchoolIcon className=\"preview-header-icon\" /> Education</h1>\n                {data.education.map((item,idx) => {\n                    return (\n                        <div key={idx + 15} className=\"preview-education-section\">\n                            <div className=\"edu-title\">\n                                <h3 className=\"preview-school\">{item.school}</h3>\n                                <h3 className=\"preview-degree\">{item.degree}</h3>\n                            </div>\n                            <div className=\"studied-for\">\n                                {`${item.startDate} - ${item.startDate && !item.endDate ? 'Still Studying' : item.endDate}`}\n                            </div>\n                        </div> \n                    )\n                })}\n            </div>\n        )\n    }\n\n    const previewSkillsSection = () => {\n        if(data.skills.length === 0) return null;\n\n        return (\n            <div className=\"preview-skills\">\n                <h1><BuildIcon className=\"preview-header-icon\" /> Skills</h1>\n                <ul className=\"skills-listing\">\n                    {data.skills.map(item => {\n                        return (\n                            <li key={item.skillsID} className=\"skills-list-item\">{item.skill}</li>\n                        )\n                    })}\n                </ul>\n            </div>\n        )\n    }\n\n    return (\n        <main className=\"section__preview\">\n            {previewPersonalInfo()}\n            {previewWorkSection()}\n            {previewEducationSection()}\n            {previewSkillsSection()}\n        </main>\n    )\n}\n\nexport default PreviewSection\n","import React from 'react'\nimport ListAltIcon from '@material-ui/icons/ListAlt';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport Button from '@material-ui/core/Button';\n\nconst Sidebar = ({isPreview,turnPreview,turnTemplateData}) => {\n    return (\n        <aside className=\"section__sidebar\">\n            <h2 className=\"sidebar-title\">Preview Mode</h2>\n            <div className=\"switch\">\n                <Button variant=\"contained\" color={isPreview ? 'primary' : 'default'} onClick={turnPreview} >Preview</Button>\n            </div>\n            {!isPreview && <p className=\"warning\">You must enable Preview Mode to be able to download the PDF!</p>}\n            <h2 className=\"sidebar-title\">Options</h2>\n            {isPreview && <button onClick={() => window.print()} className=\"download-pdf set-template\"><GetAppIcon /> <span>Download PDF</span></button>}\n            <button onClick={turnTemplateData} className=\"set-template\"><ListAltIcon /> <span>Template CV</span></button>\n            <h2 className=\"sidebar-title\">Instructions</h2>\n            <div className=\"info\">\n                <p>Fill the inputs you deem necessary, no input is obligatory, however some do require specific formats:</p>\n                <ul>\n                    <li>Phone requires a number format</li>\n                    <li>Email requires a valid email format</li>\n                    <li>Github and Linkedin require a valid URL format </li>\n                </ul>\n            </div>\n            <p className=\"warning\">Fields left blank will be ommited in the preview mode and exported PDF</p>\n        </aside>\n    )\n}\n\nexport default Sidebar\n","export const template = {\n    personal: [\n        {\n            img: 'https://randomuser.me/api/portraits/men/11.jpg',\n            name: 'Aron Smith',\n            bio: 'Marketing and business development professional with three years of skilled experience focusing on office organisation, marketing management, cost analysis, online marketing, customer relationship management, and planning and execution of the marketing strategy. Additional experience has been gained in the areas of staff responsibility, hiring, leadership, and project management.',\n            location: 'New York',\n            phone: '07624123456',\n            email: 'info@domain.com',\n            linkedin: 'https://linkedin.com/in/aron-smith/',\n            github: 'https://github.com/aron-smith',\n            id: 777\n        }\n    ],\n    experience: [\n        {\n            position: 'Head of marketing',\n            company: 'Online marketing Company',\n            description: 'Responsibilities include building the marketing organisation and managing the brand image and marketing for seven countries. Additional duties: negotiation and procurement of radio advertising, project management of the new front-end platform, cost analysis.',\n            startDate: '2015-05-01',\n            endDate: '',\n            id: 1624163188501\n        },\n        {\n            position: 'Country manager',\n            company: 'Webstation',\n            description: 'Tasked with the reorganisation and restructuring of the head office; this included increasing productivity, budgeting, contract negotiation as well as staff management and recruitment.',\n            startDate: '2013-12-01',\n            endDate: '2015-10-13',\n            id: 1624163188004\n        },\n        {\n            position: 'Marketing manager',\n            company: 'The standard',\n            description: 'Marketing manager for the UK markets. Major projects included drafting of the marketing plan, which was heavily focused on ROI, as well as strategising to achieve expansion on a limited budget.',\n            startDate: '2011-12-01',\n            endDate: '2015-05-21',\n            id: 5214163189932\n        }\n    ],\n    education: [\n        {\n            school: 'Mount Saint Vincent University',\n            degree: 'Master in business',\n            startDate: '2007-11-11',\n            endDate: '2010-10-22',\n            id: 1624137888211\n        },\n        {\n            school: 'High School X',\n            degree: 'Sciences',\n            startDate: '2002-09-09',\n            endDate: '2008-03-22',\n            id: 1324155888882\n        }\n    ],\n    skills: [\n        {\n            skill: 'Marketing',\n            skillID: 5588888213241\n        },\n        {\n            skill: 'Communication',\n            skillID: 5588888214444\n        },\n        {\n            skill: 'Project Management',\n            skillID: 5588888218212\n        },\n        {\n            skill: 'ReactJS',\n            skillID: 1218888211212\n        },\n        {\n            skill: 'English',\n            skillID: 8118888214481\n        },\n        {\n            skill: 'Javascript',\n            skillID: 4411888821661\n        },\n        {\n            skill: 'Java',\n            skillID: 8118199614442\n        },\n    ]\n}","import React, {useState} from 'react'\nimport './styles/App.scss';\nimport LibraryBooksIcon from '@material-ui/icons/LibraryBooks';\n\nimport InputSection from './InputSection';\nimport PreviewSection from './PreviewSection';\nimport Sidebar from './Sidebar';\nimport { template } from './templateData';\n\n//DELETE BUTTONS FOR INPUTS ARE NOT WORKING\n\nconst App = () => {\n    const [preview,setPreview] = useState(false);\n    const [data,setData] = useState({\n        personal: [\n            {\n                img: './default-placeholder.png',\n                name: '',\n                bio: '',\n                location: '',\n                phone: '',\n                email: '',\n                linkedin: '',\n                github: '',\n                id: 777\n            }\n        ],\n        experience: [\n            {\n                position: '',\n                company: '',\n                description: '',\n                startDate: '',\n                endDate: '',\n                id: 1624163188501\n            }\n        ],\n        education: [\n            {\n                school: '',\n                degree: '',\n                startDate: '',\n                endDate: '',\n                id: 1624137888211\n            }\n        ],\n        skills: []\n    });\n\n    const turnPreviewOn = () => setPreview(!preview); \n\n    const turnTemplateData = () => setData(template);\n\n    return (\n        <div className=\"App\">\n            <header className=\"App__header\">\n                <div>\n                    <LibraryBooksIcon className=\"book-icon\" />\n                    <h2>Make Your CV!</h2>\n                </div>\n                <h4>Export automatically to PDF!</h4>\n            </header>\n\n            <section className=\"section\">\n                {!preview && <InputSection data={data} setData={setData} />}\n                {preview && <PreviewSection data={data} />}\n                <Sidebar isPreview={preview} turnPreview={turnPreviewOn} turnTemplateData={turnTemplateData} />\n            </section>\n        </div>\n    )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './components/App';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n)"],"sourceRoot":""}